@charset "UTF-8";
/// Push or pull a Neat grid column.
///
/// @argument {number (unitless)} $_push [false]
///
/// @argument {map} $_grid [$_neat-grid-default]
///   The grid to be used to generate the column. By default, the global
///   `$_neat-grid-default` will be used.
///
/// @example scss
///   .element {
///     @include grid-push(3);
///   }
///
/// @example css
///   .element {
///     margin-left: calc((100% - (260px)) * 0.25 + 80px);
///   }

@mixin grid-push($_push: false, $_grid: $_neat-grid-default) {
  $_grid-columns: _retrieve-neat-setting($_grid, columns);
  $_grid-gutter: _retrieve-neat-setting($_grid, gutter);

  @if $_push {
    $_push-column-ratio: $_push / $_grid-columns;
    $_total-gutters: ($_grid-columns + 1) * $_grid-gutter;
    $_gutter-affordance: $_grid-gutter * ($_push + 1);
    $_total-columns: "(100% - #{$_total-gutters})";
    $_margin-value: calc(#{unquote($_total-columns)} * #{$_push-column-ratio} + #{$_gutter-affordance});

    margin-left: $_margin-value;
  } @else {
    margin-left: $_grid-gutter;
  }
}
